{"version":3,"sources":["../../../app/v1/helpers/helpers.js"],"names":["calculateDistance","lat1","lon1","lat2","lon2","console","log","radlat1","Math","PI","radlat2","theta","radtheta","dist","sin","cos","acos","toFixed","parseFloat","arraySorter","myArray","sort","a","b","distance","getCoordinates","coords","replace","split","lat","lon","cleanJoiValidator","error","validateCoordinates","ck_lat","ck_lon","validLat","test","validLon"],"mappings":"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","sourcesContent":["export const calculateDistance = (lat1, lon1, lat2, lon2) => {\n  console.log(\"Llego a calculateDistance\");\n  if (lat1 == lat2 && lon1 == lon2) {\n    return 0;\n  } else {\n    let radlat1 = (Math.PI * lat1) / 180;\n    let radlat2 = (Math.PI * lat2) / 180;\n    let theta = lon1 - lon2;\n    let radtheta = (Math.PI * theta) / 180;\n    let dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n    dist = Math.acos(dist);\n    dist = (dist * 180) / Math.PI;\n    dist = dist * 60 * 1.1515;\n    dist = dist * 1.609344;\n    console.log(\"distance: \" + dist.toFixed(1));\n    return parseFloat(dist.toFixed(1));\n  }\n};\nexport const arraySorter = (myArray) => {\n  return myArray.sort((a, b) => {\n    if (a.distance < b.distance) {\n      return -1;\n    }\n    if (a.distance > b.distance) {\n      return 1;\n    }\n    return 0;\n  });\n};\n\nexport const getCoordinates = (coords) => {\n  coords = coords.replace(\" \", \"\").split(\",\");\n  return {\n    lat: coords[0],\n    lon: coords[1],\n  };\n};\n\nexport const cleanJoiValidator = (error) => error.replace(/[^a-zA-Z ]/g, \"\");\n\nexport const validateCoordinates = (lat, lon) => {\n  const ck_lat = /^(-?[1-8]?\\d(?:\\.\\d{1,18})?|90(?:\\.0{1,18})?)$/;\n  const ck_lon = /^(-?(?:1[0-7]|[1-9])?\\d(?:\\.\\d{1,18})?|180(?:\\.0{1,18})?)$/;\n  const validLat = ck_lat.test(lat);\n  const validLon = ck_lon.test(lon);\n  if (validLat && validLon) {\n    return true;\n  } else {\n    return false;\n  }\n};\n"],"file":"helpers.js"}